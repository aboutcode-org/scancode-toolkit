[build-system]
requires = [ "flot>=0.7.0" ]
build-backend = "flot.buildapi"

[project]
name = "scancode-toolkit"
version = "32.1.0"
description = "ScanCode is a tool to scan code for license, copyright, package and their documented dependencies and other interesting facts."
readme = "README.rst"
license = { text = "Apache-2.0 AND CC-BY-4.0 AND LicenseRef-scancode-other-permissive AND LicenseRef-scancode-other-copyleft" }
requires-python = ">=3.8"
authors = [
    { name = "nexB. Inc. and others", email = "info@aboutcode.org" },
]
keywords = [
    "open source",
    "scan",
    "license",
    "package",
    "dependency",
    "copyright",
    "filetype",
    "author",
    "extract",
    "licensing",
    "sca",
    "SBOM",
    "spdx",
    "cyclonedx",
    "package-url",
    "purl",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Utilities",
]

dependencies = [
    "licensedcode-index",
    "attrs >= 18.1,!=20.1.0;python_version<'3.11'",
    "attrs >= 22.1.0;python_version>='3.11'",
    "Beautifulsoup4 >= 4.0.0",
    "boolean.py >= 4.0",
    "chardet >= 3.0.0",
    "click >= 6.7, !=7.0",
    "colorama >= 0.3.9",
    "commoncode >= 31.0.3",
    "container-inspector >= 31.0.0",
    "debian-inspector >= 31.1.0",
    "dparse2 >= 0.7.0",
    "fasteners",
    "fingerprints >= 0.6.0",
    "ftfy >=  6.0.0",
    "gemfileparser2 >= 0.9.0",
    "html5lib",
    "importlib_metadata",
    "intbitset >= 3.0.2",
    "jaraco.functools",
    "javaproperties >= 0.5",
    "jinja2 >= 2.7.0",
    "jsonstreams >= 0.5.0",
    "license_expression >= 30.1.1",
    "lxml >= 4.9.2",
    "MarkupSafe >= 2.1.2",
    "packageurl_python >= 0.9.0",
    "packvers >= 21.0.0",
    # use temp advanced patched release
    "parameter-expansion-patched >= 0.3.1",
    "pdfminer.six >= 20200101",
    "pefile >= 2020.1.1",
    "pip-requirements-parser >= 32.0.1",
    "pkginfo2 >= 30.0.0",
    "pluggy >= 1.0.0",
    "plugincode >= 32.0.0",
    "publicsuffix2",
    "pyahocorasick >= 2.0.0",
    "pygmars >= 0.7.0",
    "pygments",
    "pymaven_patch >= 0.2.8",
    "requests >= 2.7.0",
    "saneyaml >= 0.6.0",
    "spdx_tools == 0.8.2",
    "text_unidecode >= 1.0",
    "toml >= 0.10.0",
    "urlpy",
    "xmltodict >= 0.11.0",
    "zipp >= 3.0.0; python_version < \"3.9\"",
    "typecode >= 30.0.1",
    "typecode[full] >= 30.0.1",
    "extractcode[full] >= 31.0.0",
]

[project.urls]
Homepage = "https://github.com/nexB/scancode-toolkit"


[project.optional-dependencies]
licenses = [
    "licensecode-data",
]

# no impact but added for symmetry with the other pyproject.toml
full = [
    "extractcode[full] >= 31.0.0",
    "typecode[full] >= 30.0.0",
]

# linux-only package handling
packages = [
    "rpm_inspector_rpm >= 4.16.1.3; platform_system == 'Linux'",
    "regipy >= 3.1.0; platform_system == 'Linux'",
    "packagedcode_msitools >= 0.101.210706; platform_system == 'Linux'",
]

testing = [
    "flot",
    "pytest >= 6, != 7.0.0",
    "pytest-xdist >= 2",
    "aboutcode-toolkit >= 7.0.2",
    "pycodestyle >= 2.8.0",
    "twine",
    "black",
    "isort",
    "vendorize >= 0.3.0",
    "pytest-rerunfailures",
    "bump-my-version",
]

docs = [
    "Sphinx == 5.1.0",
    "sphinx_rtd_theme >= 0.5.1",
    "doc8 >= 0.8.1",
    "sphinx-reredirects >= 0.1.2",
    "sphinx-autobuild",
    "sphinx-rtd-dark-mode>=1.3.0",
    "sphinx-copybutton",
]


[tool.bumpversion]
current_version = "32.1.0"
allow_dirty = true

files = [
    { filename = "src/scancode_config.py" },
    { filename = "pyproject.toml" },
    { filename = "pyproject-scancode-toolkit-mini.toml" },
    { filename = "pyproject-packagedcode.toml" },
    
]


[tool.flot]
wheel_path_prefixes_to_strip = [ "src" ]

includes = [
    "src/**/*",
]

excludes = [
    # these are now provided by separate, smaller packages
    "src/licensedcode/data/**/*",

    # scancode_toolkit.egg-info is only for editable local config
    "src/scancode_toolkit.egg-info/**/*",

    "docs/build/**/*",

    # Python compiled files
    "**/*.py[cod]",
    "**/*.egg-info",
    # Various junk and temp files
    "**/.DS_Store",
    "**/*~",
    "**/.*.sw[po]",
    "**/.ve",
    "**/*.bak",
    "**/.ipynb_checkpoints",
]

metadata_files = [
    "*.LICENSE",
    "NOTICE",
    "AUTHORS.rst",
    "CHANGELOG.rst",
    "CODE_OF_CONDUCT.rst",
]

editable_paths = [ "src", "tests" ]

sdist_extra_includes = [
    "etc/**/*",
    # "docs/**/*",
    ".github/**/*",
    # "samples/**/*",
    #"tests/**/*",
    ".gitattributes",
    ".gitignore",
    "*.LICENSE",
    "NOTICE",
    "*.ABOUT",
    "*.toml",
    "*.yml",
    "*.rst",
    "*.py",

    "requirements*",

    "configure*",
    "extractcode*",
    "scancode*",

    ".dockerignore",
    "Dockerfile*",
    # path to executable used by a built app
    "PYTHON_EXECUTABLE*",
    ".VERSION",
]


[tool.isort]
force_single_line = "True"
line_length = 88
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = "doc,venv,tmp,thirdparty,build,dist"


[project.scripts]
scancode = "scancode.cli:scancode"
scancode-reindex-licenses = "licensedcode.reindex:reindex_licenses"
scancode-license-data = "licensedcode.license_db:dump_scancode_license_data"
regen-package-docs = "packagedcode.regen_package_docs:regen_package_docs"


# These are configurations for ScanCode plugins as entry points.
# Each plugin entry hast this form:
#   plugin-name = f"ully.qualified.module:PluginClass"
# where plugin-name must be a unique arbitrary name for this entrypoint.

# scancode_pre_scan is the entry point for pre_scan plugins executed before the
# scans. See also plugincode.pre_scan module for details and doc.
[project.entry-points.scancode_pre_scan]
ignore = "scancode.plugin_ignore:ProcessIgnore"
facet = "summarycode.facet:AddFacet"


# scancode_scan is the entry point for scan plugins that run a scan after the
# pre_scan plugins and before the post_scan plugins. See also plugincode.scan
# module for details and doc.
[project.entry-points.scancode_scan]
info = "scancode.plugin_info:InfoScanner"
licenses = "licensedcode.plugin_license:LicenseScanner"
copyrights = "cluecode.plugin_copyright:CopyrightScanner"
packages = "packagedcode.plugin_package:PackageScanner"
emails = "cluecode.plugin_email:EmailScanner"
urls = "cluecode.plugin_url:UrlScanner"
generated = "summarycode.generated:GeneratedCodeDetector"


# scancode_post_scan is the entry point for post_scan plugins executed after the
# scan plugins and before the output plugins. See also plugincode.post_scan
# module for details and doc.
[project.entry-points.scancode_post_scan]
summary = "summarycode.summarizer:ScanSummary"
tallies = "summarycode.tallies:Tallies"
tallies-with-details = "summarycode.tallies:TalliesWithDetails"
tallies-key-files = "summarycode.tallies:KeyFilesTallies"
tallies-by-facet = "summarycode.tallies:FacetTallies"
license-clarity-score = "summarycode.score:LicenseClarityScore"
license-policy = "licensedcode.plugin_license_policy:LicensePolicy"
mark-source = "scancode.plugin_mark_source:MarkSource"
filter-clues = "cluecode.plugin_filter_clues:RedundantCluesFilter"
consolidate = "summarycode.plugin_consolidate:Consolidator"
license-references = "licensedcode.licenses_reference:LicenseReference"
todo = "summarycode.todo:AmbiguousDetectionsToDoPlugin"
classify = "summarycode.classify_plugin:FileClassifier"


# scancode_output_filter is the entry point for filter plugins executed after
# the post-scan plugins and used by the output plugins to exclude/filter certain
# files or directories from the codebase. See also plugincode.post_scan module
# for details and doc.
[project.entry-points.scancode_output_filter]
only-findings = "scancode.plugin_only_findings:OnlyFindings"
ignore-copyrights = "cluecode.plugin_ignore_copyrights:IgnoreCopyrights"


# scancode_output is the entry point for output plugins that write a scan output
# in a given format at the end of a scan. See also plugincode._output module for
# details and doc.
[project.entry-points.scancode_output]
html = "formattedcode.output_html:HtmlOutput"
html-app = "formattedcode.output_html:HtmlAppOutput"
json = "formattedcode.output_json:JsonCompactOutput"
json-pp = "formattedcode.output_json:JsonPrettyOutput"
spdx-tv = "formattedcode.output_spdx:SpdxTvOutput"
spdx-rdf = "formattedcode.output_spdx:SpdxRdfOutput"
csv = "formattedcode.output_csv:CsvOutput"
jsonlines = "formattedcode.output_jsonlines:JsonLinesOutput"
template = "formattedcode.output_html:CustomTemplateOutput"
debian = "formattedcode.output_debian:DebianCopyrightOutput"
yaml = "formattedcode.output_yaml:YamlOutput"
cyclonedx = "formattedcode.output_cyclonedx:CycloneDxJsonOutput"
cyclonedx-xml = "formattedcode.output_cyclonedx:CycloneDxXmlOutput"


[tool.pytest.ini_options]
norecursedirs = [
   ".git",
   "bin",
   "dist",
   "build",
   "_build",
   "dist",
   "etc",
   "local",
   "ci",
   "docs",
   "man",
   "share",
   "samples",
   ".cache",
   ".settings",
   "Include",
   "include",
   "Lib",
   "lib",
   "lib64",
   "Lib64",
   "Scripts",
   "thirdparty",
   "tmp",
   "venv",
   "tests/data",
   ".eggs",
   "src/*/data",
   "tests/*/data",
   "src/licensedcode/_vendor"
]

python_files = "*.py"

python_classes = "Test"
python_functions = "test"

addopts = [
    "-rfExXw",
    "--strict-markers",
    "--doctest-modules"
]
