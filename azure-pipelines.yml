
################################################################################
# We use Azure to run the full tests suites on multiple Python 3.x
# on multiple Windows, macOS and Linux versions all on 64 bits
# These jobs are using VMs with Azure-provided Python builds
################################################################################

jobs:

################################################################################
# These jobs are using VMs and Azure-provided Pythons 3.10
################################################################################

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: core_tests
          image_name: ubuntu-20.04
          python_versions: ['3.10']
          test_suites:
              misc_and_scancode: |
               # cli tests are launched below on all OSes
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  --ignore=tests/cluecode \
                  --ignore=tests/licensedcode \
                  --ignore=tests/scancode/test_cli.py

              cluecode_license_base: |
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  tests/cluecode \
                  --ignore=tests/licensedcode/test_zzzz_cache.py \
                  --ignore=tests/licensedcode/test_detection_datadriven_external.py \
                  --ignore=tests/licensedcode/test_detection_datadriven1.py \
                  --ignore=tests/licensedcode/test_detection_datadriven2.py \
                  --ignore=tests/licensedcode/test_detection_datadriven3.py \
                  --ignore=tests/licensedcode/test_detection_datadriven4.py \
                  --ignore=tests/licensedcode/test_additional_license.py \
                  tests/licensedcode

              license_datadriven1_2: |
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  tests/licensedcode/test_detection_datadriven1.py \
                  tests/licensedcode/test_detection_datadriven2.py

              license_datadriven3_4: |
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  tests/licensedcode/test_detection_datadriven3.py \
                  tests/licensedcode/test_detection_datadriven4.py

              license_datadriven_ext: |
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  tests/licensedcode/test_detection_datadriven_external.py

              license_validate_ext_1: |
                venv/bin/pytest -n 3 -vvs --test-suite=validate \
                  tests/licensedcode/test_detection_validate.py \
                  -k TestValidateLicenseExtended1

              license_validate_ext_2: |
                venv/bin/pytest -n 3 -vvs --test-suite=validate \
                  tests/licensedcode/test_detection_validate.py \
                  -k TestValidateLicenseExtended2

              license_validate_ext_3: |
                venv/bin/pytest -n 3 -vvs --test-suite=validate \
                  tests/licensedcode/test_detection_validate.py \
                  -k TestValidateLicenseExtended3

              license_validate_ext_4: |
                venv/bin/pytest -n 3 -vvs --test-suite=validate \
                  tests/licensedcode/test_detection_validate.py \
                  -k TestValidateLicenseExtended4

              license_validate_ext_5: |
                venv/bin/pytest -n 3 -vvs --test-suite=validate \
                  tests/licensedcode/test_detection_validate.py \
                  -k TestValidateLicenseExtended5

              license_cache: |
                venv/bin/pytest -n 3 -vvs --test-suite=all \
                  tests/licensedcode/test_zzzz_cache.py

              # this test runs in isolation because it modifies the actual
              # license index with additional licenses provided by a plugin
              # and we use the special --test-suite=plugins marker for these
              # tests
              additional_license_combined: |
                venv/bin/pip install tests/licensedcode/data/additional_licenses/additional_plugin_1/
                venv/bin/pip install tests/licensedcode/data/additional_licenses/additional_plugin_2/
                venv/bin/scancode-reindex-licenses \
                  --additional-directory tests/licensedcode/data/additional_licenses/additional_dir/
                venv/bin/pytest -vvs --test-suite=plugins \
                  tests/licensedcode/test_additional_license.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu18_cpython
          image_name: ubuntu-18.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu20_cpython
          image_name: ubuntu-20.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu22_cpython
          image_name: ubuntu-22.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: macos11_cpython
          image_name: macos-11
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: macos12_cpython
          image_name: macos-12
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2019_cpython_1
          image_name: windows-2019
          python_versions: ['3.8']
          python_architecture: x64
          test_suites:
              all: venv\Scripts\pytest -n 2 -vvs tests\scancode\test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2019_cpython_2
          image_name: windows-2019
          python_versions: ['3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv\Scripts\pytest -n 2 -vvs tests\scancode\test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2022_cpython_1
          image_name: windows-2022
          python_versions: ['3.8']
          python_architecture: x64
          test_suites:
              all: venv\Scripts\pytest -n 2 -vvs tests\scancode\test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2022_cpython_2
          image_name: windows-2022
          python_versions: ['3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              all: venv\Scripts\pytest -n 2 -vvs tests\scancode\test_cli.py


################################################################################
# Test using many version of Click to work around any regressions in their API
################################################################################


    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu20_test_all_supported_click_versions
          image_name: ubuntu-20.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          python_architecture: x64
          test_suites:
              click_versions: |
                for clk_ver in 8.1.3 8.1.2 8.1.1 8.1.0 8.0.4 8.0.3 8.0.2 8.0.1 7.1.2 7.1.1 7.1 6.7; 
                 do
                  venv/bin/pip install click==$clk_ver;
                  venv/bin/scancode -i samples/ -n3 --json foo.json; 
                  venv/bin/scancode -i --verbose samples/ -n3 --json foo.json; 
                 done


################################################################################
# Tests using a plain pip install to get the latest of all wheels
################################################################################

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu22_cpython_latest_from_pip
          image_name: ubuntu-22.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv/bin/pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] && venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu18_cpython_latest_from_pip
          image_name: ubuntu-18.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv/bin/pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] && venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: ubuntu20_cpython_latest_from_pip
          image_name: ubuntu-20.04
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv/bin/pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] && venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: macos11_cpython_latest_from_pip
          image_name: macos-11
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv/bin/pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] && venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-posix.yml
      parameters:
          job_name: macos12_cpython_latest_from_pip
          image_name: macos-12
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv/bin/pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] && venv/bin/pytest -n 2 -vvs tests/scancode/test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2019_cpython_latest_from_pip
          image_name: windows-2019
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv\Scripts\pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] &&  venv\Scripts\pytest -n 2 -vvs  tests\scancode\test_cli.py

    - template: etc/ci/azure-win.yml
      parameters:
          job_name: win2022_cpython_latest_from_pip
          image_name: windows-2022
          python_versions: ['3.8', '3.9', '3.10', '3.11']
          test_suites:
              all: venv\Scripts\pip install --upgrade-strategy eager --force-reinstall --upgrade -e .[testing] &&  venv\Scripts\pytest -n 2 -vvs  tests\scancode\test_cli.py

