[
  {
    "type": "pypi",
    "namespace": null,
    "name": "toml",
    "version": "0.10.1",
    "qualifiers": {},
    "subpath": null,
    "primary_language": "Python",
    "description": "Python Library for Tom's Obvious, Minimal Language\n****\nTOML\n****\n\n.. image:: https://badge.fury.io/py/toml.svg\n    :target: https://badge.fury.io/py/toml\n\n.. image:: https://travis-ci.org/uiri/toml.svg?branch=master\n    :target: https://travis-ci.org/uiri/toml\n\n.. image:: https://img.shields.io/pypi/pyversions/toml.svg\n    :target: https://pypi.org/project/toml/\n\n\nA Python library for parsing and creating `TOML <https://en.wikipedia.org/wiki/TOML>`_.\n\nThe module passes `the TOML test suite <https://github.com/BurntSushi/toml-test>`_.\n\nSee also:\n\n* `The TOML Standard <https://github.com/toml-lang/toml>`_\n* `The currently supported TOML specification <https://github.com/toml-lang/toml/blob/v0.5.0/README.md>`_\n\nInstallation\n============\n\nTo install the latest release on `PyPI <https://pypi.org/project/toml/>`_,\nsimply run:\n\n::\n\n  pip install toml\n\nOr to install the latest development version, run:\n\n::\n\n  git clone https://github.com/uiri/toml.git\n  cd toml\n  python setup.py install\n\nQuick Tutorial\n==============\n\n*toml.loads* takes in a string containing standard TOML-formatted data and\nreturns a dictionary containing the parsed data.\n\n.. code:: pycon\n\n  >>> import toml\n  >>> toml_string = \"\"\"\n  ... # This is a TOML document.\n  ...\n  ... title = \"TOML Example\"\n  ...\n  ... [owner]\n  ... name = \"Tom Preston-Werner\"\n  ... dob = 1979-05-27T07:32:00-08:00 # First class dates\n  ...\n  ... [database]\n  ... server = \"192.168.1.1\"\n  ... ports = [ 8001, 8001, 8002 ]\n  ... connection_max = 5000\n  ... enabled = true\n  ...\n  ... [servers]\n  ...\n  ...   # Indentation (tabs and/or spaces) is allowed but not required\n  ...   [servers.alpha]\n  ...   ip = \"10.0.0.1\"\n  ...   dc = \"eqdc10\"\n  ...\n  ...   [servers.beta]\n  ...   ip = \"10.0.0.2\"\n  ...   dc = \"eqdc10\"\n  ...\n  ... [clients]\n  ... data = [ [\"gamma\", \"delta\"], [1, 2] ]\n  ...\n  ... # Line breaks are OK when inside arrays\n  ... hosts = [\n  ...   \"alpha\",\n  ...   \"omega\"\n  ... ]\n  ... \"\"\"\n  >>> parsed_toml = toml.loads(toml_string)\n\n\n*toml.dumps* takes a dictionary and returns a string containing the\ncorresponding TOML-formatted data.\n\n.. code:: pycon\n\n  >>> new_toml_string = toml.dumps(parsed_toml)\n  >>> print(new_toml_string)\n  title = \"TOML Example\"\n  [owner]\n  name = \"Tom Preston-Werner\"\n  dob = 1979-05-27T07:32:00Z\n  [database]\n  server = \"192.168.1.1\"\n  ports = [ 8001, 8001, 8002,]\n  connection_max = 5000\n  enabled = true\n  [clients]\n  data = [ [ \"gamma\", \"delta\",], [ 1, 2,],]\n  hosts = [ \"alpha\", \"omega\",]\n  [servers.alpha]\n  ip = \"10.0.0.1\"\n  dc = \"eqdc10\"\n  [servers.beta]\n  ip = \"10.0.0.2\"\n  dc = \"eqdc10\"\n\nFor more functions, view the API Reference below.\n\nNote\n----\n\nFor Numpy users, by default the data types ``np.floatX`` will not be translated to floats by toml, but will instead be encoded as strings. To get around this, specify the ``TomlNumpyEncoder`` when saving your data.\n\n.. code:: pycon\n\n  >>> import toml\n  >>> import numpy as np\n  >>> a = np.arange(0, 10, dtype=np.double)\n  >>> output = {'a': a}\n  >>> toml.dumps(output)\n  'a = [ \"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"7.0\", \"8.0\", \"9.0\",]\\n'\n  >>> toml.dumps(output, encoder=toml.TomlNumpyEncoder())\n  'a = [ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,]\\n'\n\nAPI Reference\n=============\n\n``toml.load(f, _dict=dict)``\n  Parse a file or a list of files as TOML and return a dictionary.\n\n  :Args:\n    * ``f``: A path to a file, list of filepaths (to be read into single\n      object) or a file descriptor\n    * ``_dict``: The class of the dictionary object to be returned\n\n  :Returns:\n    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n    * ``TypeError``: When ``f`` is an invalid type or is a list containing\n      invalid types\n    * ``TomlDecodeError``: When an error occurs while decoding the file(s)\n\n``toml.loads(s, _dict=dict)``\n  Parse a TOML-formatted string to a dictionary.\n\n  :Args:\n    * ``s``: The TOML-formatted string to be parsed\n    * ``_dict``: Specifies the class of the returned toml dictionary\n\n  :Returns:\n    A dictionary (or object ``_dict``) containing parsed TOML data\n\n  :Raises:\n    * ``TypeError``: When a non-string object is passed\n    * ``TomlDecodeError``: When an error occurs while decoding the\n      TOML-formatted string\n\n``toml.dump(o, f, encoder=None)``\n  Write a dictionary to a file containing TOML-formatted data\n\n  :Args:\n    * ``o``: An object to be converted into TOML\n    * ``f``: A File descriptor where the TOML-formatted output should be stored\n    * ``encoder``: An instance of ``TomlEncoder`` (or subclass) for encoding the object. If ``None``, will default to ``TomlEncoder``\n\n  :Returns:\n    A string containing the TOML-formatted data corresponding to object ``o``\n\n  :Raises:\n    * ``TypeError``: When anything other than file descriptor is passed\n\n``toml.dumps(o, encoder=None)``\n  Create a TOML-formatted string from an input object\n\n  :Args:\n    * ``o``: An object to be converted into TOML\n    * ``encoder``: An instance of ``TomlEncoder`` (or subclass) for encoding the object. If ``None``, will default to ``TomlEncoder``\n\n  :Returns:\n    A string containing the TOML-formatted data corresponding to object ``o``\n\n\n\nLicensing\n=========\n\nThis project is released under the terms of the MIT Open Source License. View\n*LICENSE.txt* for more information.",
    "release_date": null,
    "parties": [
      {
        "type": "person",
        "role": "author",
        "name": "William Pearson",
        "email": "uiri@xqz.ca",
        "url": null
      }
    ],
    "keywords": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "homepage_url": "https://github.com/uiri/toml",
    "download_url": null,
    "size": null,
    "sha1": null,
    "md5": null,
    "sha256": null,
    "sha512": null,
    "bug_tracking_url": null,
    "code_view_url": null,
    "vcs_url": null,
    "copyright": null,
    "holder": null,
    "declared_license_expression": "mit",
    "declared_license_expression_spdx": "MIT",
    "license_detections": [
      {
        "license_expression": "mit",
        "license_expression_spdx": "MIT",
        "matches": [
          {
            "license_expression": "mit",
            "spdx_license_expression": "MIT",
            "from_file": null,
            "start_line": 1,
            "end_line": 1,
            "matcher": "1-spdx-id",
            "score": 100.0,
            "matched_length": 1,
            "match_coverage": 100.0,
            "rule_relevance": 100,
            "rule_identifier": "spdx-license-identifier-mit-5da48780aba670b0860c46d899ed42a0f243ff06",
            "rule_url": null,
            "matched_text": "MIT"
          }
        ],
        "identifier": "mit-a822f434-d61f-f2b1-c792-8b8cb9e7b9bf"
      },
      {
        "license_expression": "mit",
        "license_expression_spdx": "MIT",
        "matches": [
          {
            "license_expression": "mit",
            "spdx_license_expression": "MIT",
            "from_file": null,
            "start_line": 1,
            "end_line": 1,
            "matcher": "1-hash",
            "score": 100.0,
            "matched_length": 5,
            "match_coverage": 100.0,
            "rule_relevance": 100,
            "rule_identifier": "pypi_mit_license.RULE",
            "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/pypi_mit_license.RULE",
            "matched_text": "- 'License :: OSI Approved :: MIT License'"
          }
        ],
        "identifier": "mit-24a5293c-14d7-5403-efac-1a8b7532c0e8"
      }
    ],
    "other_license_expression": null,
    "other_license_expression_spdx": null,
    "other_license_detections": [],
    "extracted_license_statement": "license: MIT\nclassifiers:\n  - 'License :: OSI Approved :: MIT License'\n",
    "notice_text": null,
    "source_packages": [],
    "file_references": [
      {
        "path": "toml-0.10.1.dist-info/DESCRIPTION.rst",
        "size": 5262,
        "sha1": null,
        "md5": null,
        "sha256": "0db5e52d356a193ece83171966aa6de2f7380708e42fdc8c6cdd5705b5dc9dd4",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/INSTALLER",
        "size": 4,
        "sha1": null,
        "md5": null,
        "sha256": "ceebae7b8927a3227e5303cf5e0f1f7b34bb542ad7250ac03fbcde36ec2f1508",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/LICENSE.txt",
        "size": 1252,
        "sha1": null,
        "md5": null,
        "sha256": "2d9294823df6c89357c8be4927fce79361d6561e5ee7532d5926e63939aaa536",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/METADATA",
        "size": 6371,
        "sha1": null,
        "md5": null,
        "sha256": "f45cdd6f8f921bca704cf6c1453d6404140154b8cb09b10a94116386546b45fe",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/RECORD",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/WHEEL",
        "size": 110,
        "sha1": null,
        "md5": null,
        "sha256": "02f47459e4e90dac53eb8e5b979150c542ba34fb1396cdadb69706260de3d578",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/metadata.json",
        "size": 1185,
        "sha1": null,
        "md5": null,
        "sha256": "5c8bc81c9d06c64ee50f031a8e43917158d51127ee2805e13e1315ac91d1a9bc",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml-0.10.1.dist-info/top_level.txt",
        "size": 5,
        "sha1": null,
        "md5": null,
        "sha256": "d813bc651367bc95a05f2890bfae8b05bfeff3ba81cdca14b4405e7c0ef93ae9",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__init__.py",
        "size": 723,
        "sha1": null,
        "md5": null,
        "sha256": "0adb86e5a40d93a9ba326c68b6bb7a179db1f5d45de77a324e23188a2f7b867d",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/__init__.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/common.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/decoder.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/encoder.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/ordered.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/__pycache__/tz.cpython-38.pyc",
        "size": null,
        "sha1": null,
        "md5": null,
        "sha256": null,
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/common.py",
        "size": 242,
        "sha1": null,
        "md5": null,
        "sha256": "56205c70076e3fa79934901bd4f3a14618ce022e7a4c3b0d8162754e381702e8",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/decoder.py",
        "size": 38684,
        "sha1": null,
        "md5": null,
        "sha256": "811827350ef7237670f18b3402b0646de73d877d7bcde163991bb84cca17ba6c",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/encoder.py",
        "size": 9931,
        "sha1": null,
        "md5": null,
        "sha256": "f47a5e90fb5790075f84fa59a9f1d4c717d6f367ccc49f5ac9b88b53371b477d",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/ordered.py",
        "size": 354,
        "sha1": null,
        "md5": null,
        "sha256": "9b3d37959995d1b99cf65b1844850eba3ec3b2ee4fb70abe52d195ab915d559e",
        "sha512": null,
        "extra_data": {}
      },
      {
        "path": "toml/tz.py",
        "size": 618,
        "sha1": null,
        "md5": null,
        "sha256": "0eb020237c19c5988670bb95fe5f2e780fe73eb628c50de1640f6d2528d646c4",
        "sha512": null,
        "extra_data": {}
      }
    ],
    "is_private": false,
    "is_virtual": false,
    "extra_data": {},
    "dependencies": [],
    "repository_homepage_url": "https://pypi.org/project/toml",
    "repository_download_url": "https://pypi.org/packages/source/t/toml/toml-0.10.1.tar.gz",
    "api_data_url": "https://pypi.org/pypi/toml/0.10.1/json",
    "datasource_id": "pypi_wheel_metadata",
    "purl": "pkg:pypi/toml@0.10.1"
  }
]