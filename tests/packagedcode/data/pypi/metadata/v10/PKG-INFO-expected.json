[
  {
    "type": "pypi",
    "namespace": null,
    "name": "prompt-toolkit",
    "version": "0.53.1",
    "qualifiers": {},
    "subpath": null,
    "primary_language": "Python",
    "description": "Library for building powerful interactive command lines in Python\nPython Prompt Toolkit\n=====================\n\n|Build Status|  |PyPI|\n\n``prompt_toolkit`` is a library for building powerful interactive command lines\nin Python.\n\nLooking for ptpython, the Python REPL?\n**************************************\n\nAre you looking for ``ptpython``, the interactive Python Shell? We moved the\n``ptpython`` source code to a separate repository. This way we are sure not to\npollute the ``prompt_toolkit`` library with any ``ptpython``-specific stuff and\n``ptpython`` can be developed independently. You will now have to install it\nthrough::\n\n    pip install ptpython\n\n`Go to ptpython... <http://github.com/jonathanslenders/ptpython/>`_\n\n.. image :: https://github.com/jonathanslenders/python-prompt-toolkit/raw/master/docs/images/ptpython.png\n\nprompt-toolkit features\n***********************\n\n``prompt_toolkit`` could be a replacement for `GNU readline\n<http://cnswww.cns.cwru.edu/php/chet/readline/rltop.html>`_, but it can be much\nmore than that.\n\nSome features:\n\n- Pure Python.\n- Syntax highlighting of the input while typing. (For instance, with a Pygments lexer.)\n- Multi-line input editing.\n- Advanced code completion.\n- Both Emacs and Vi key bindings. (Similar to readline.)\n- Reverse and forward incremental search.\n- Runs on all Python versions from 2.6 up to 3.4.\n- Works well with Unicode double width characters. (Chinese input.)\n- Selecting text for copy/paste. (Both Emacs and Vi style.)\n- Mouse support for cursor positioning and scrolling.\n- Auto suggestions. (Like `fish shell <http://fishshell.com/>`_.)\n- Multiple input buffers.\n- No global state.\n- Lightweight, the only dependencies are Pygments, six and wcwidth.\n- Code written with love.\n- Runs on Linux, OS X, OpenBSD and Windows systems.\n\nFeel free to create tickets for bugs and feature requests, and create pull\nrequests if you have nice patches that you would like to share with others.\n\n\nAbout Windows support\n*********************\n\n``prompt_toolkit`` is cross platform, and everything that you build on top\nshould run fine on both Unix and Windows systems. On Windows, it uses a\ndifferent event loop (``WaitForMultipleObjects`` instead of ``select``), and\nanother input and output system. (Win32 APIs instead of pseudo-terminals and\nVT100.)\n\nIt's worth noting that the implementation is a \"best effort of what is\npossible\". Both Unix and Windows terminals have their limitations. But in\ngeneral, the Unix experience will still be a little better.\n\nFor Windows, it's recommended to use either `cmder\n<http://gooseberrycreative.com/cmder/>`_ or `conemu <https://conemu.github.io/>`_.\n\n\nInstallation\n************\n\n::\n\n    pip install prompt-toolkit\n\n\nGetting started\n***************\n\nThe most simple example of the library would look like this:\n\n.. code:: python\n\n    from prompt_toolkit import prompt\n\n    if __name__ == '__main__':\n        answer = prompt('Give me some input: ')\n        print('You said: %s' % answer)\n\nFor more complex examples, have a look in the ``examples`` directory. All\nexamples are chosen to demonstrate only one thing. Also, don't be afraid to\nlook at the source code. The implementation of the ``prompt`` function could be\na good start.\n\nNote: For Python 2, you need to add ``from __future__ import unicode_literals``\nto the above example. All strings are expected to be unicode strings.\n\n\nProjects using prompt-toolkit\n*****************************\n\n- `ptpython <http://github.com/jonathanslenders/ptpython/>`_: Python REPL\n- `ptpdb <http://github.com/jonathanslenders/ptpdb/>`_: Python debugger (pdb replacement)\n- `pgcli <http://pgcli.com/>`_: Postgres client.\n- `mycli <http://mycli.net>`_: MySql client.\n- `pyvim <http://github.com/jonathanslenders/pyvim/>`_: A Vim clone in pure Python\n- `wharfee <http://wharfee.com/>`_: A Docker command line.\n- `xonsh <http://xonsh.org/>`_: A Python-ish, BASHwards-compatible shell.\n- `saws <https://github.com/donnemartin/saws>`_: A Supercharged AWS Command Line Interface.\n\n\n(Want your own project to be listed here? Please create a GitHub issue.)\n\n\nPhilosophy\n**********\n\nThe source code of ``prompt_toolkit`` should be readable, concise and\nefficient. We prefer short functions focussing each on one task and for which\nthe input and output types are clearly specified. We mostly prefer composition\nover inheritance, because inheritance can result in too much functionality in\nthe same object. We prefer immutable objects where possible (objects don't\nchange after initialisation). Reusability is important. We absolutely refrain\nfrom having a changing global state, it should be possible to have multiple\nindependent instances of the same code in the same process. The architecture\nshould be layered: the lower levels operate on primitive operations and data\nstructures giving -- when correctly combined -- all the possible flexibility;\nwhile at the higher level, there should be a simpler API, ready-to-use and\nsufficient for most use cases. Thinking about algorithms and efficiency is\nimportant, but avoid premature optimization.\n\n\nSpecial thanks to\n*****************\n\n- `Pygments <http://pygments.org/>`_: Syntax highlighter.\n- `wcwidth <https://github.com/jquast/wcwidth>`_: Determine columns needed for a wide characters.\n\n.. |Build Status| image:: https://api.travis-ci.org/jonathanslenders/python-prompt-toolkit.svg?branch=master\n    :target: https://travis-ci.org/jonathanslenders/python-prompt-toolkit#\n\n.. |PyPI| image:: https://pypip.in/version/prompt-toolkit/badge.svg\n    :target: https://pypi.python.org/pypi/prompt-toolkit/\n    :alt: Latest Version",
    "release_date": null,
    "parties": [
      {
        "type": "person",
        "role": "author",
        "name": "Jonathan Slenders",
        "email": "UNKNOWN",
        "url": null
      }
    ],
    "keywords": [],
    "homepage_url": "https://github.com/jonathanslenders/python-prompt-toolkit",
    "download_url": null,
    "size": null,
    "sha1": null,
    "md5": null,
    "sha256": null,
    "sha512": null,
    "bug_tracking_url": null,
    "code_view_url": null,
    "vcs_url": null,
    "copyright": null,
    "holder": null,
    "declared_license_expression": "unknown",
    "declared_license_expression_spdx": "LicenseRef-scancode-unknown",
    "license_detections": [
      {
        "license_expression": "unknown",
        "license_expression_spdx": "LicenseRef-scancode-unknown",
        "matches": [
          {
            "license_expression": "unknown",
            "spdx_license_expression": "LicenseRef-scancode-unknown",
            "from_file": null,
            "start_line": 1,
            "end_line": 1,
            "matcher": "5-undetected",
            "score": 100.0,
            "matched_length": 4,
            "match_coverage": 100.0,
            "rule_relevance": 100,
            "rule_identifier": "package-manifest-unknown-54cabbf9e6e2ad452085853f06d62077e9d72ddb",
            "rule_url": "https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/rules/package-manifest-unknown-54cabbf9e6e2ad452085853f06d62077e9d72ddb",
            "matched_text": "license {'license': 'LICENSE.txt'}"
          }
        ],
        "identifier": "unknown-d5d1ef26-6d73-51c2-0bd1-6551bb2e6e9c"
      }
    ],
    "other_license_expression": null,
    "other_license_expression_spdx": null,
    "other_license_detections": [],
    "extracted_license_statement": "license: LICENSE.txt\n",
    "notice_text": null,
    "source_packages": [],
    "file_references": [],
    "is_private": false,
    "is_virtual": false,
    "extra_data": {},
    "dependencies": [],
    "repository_homepage_url": "https://pypi.org/project/prompt-toolkit",
    "repository_download_url": "https://pypi.org/packages/source/p/prompt-toolkit/prompt-toolkit-0.53.1.tar.gz",
    "api_data_url": "https://pypi.org/pypi/prompt-toolkit/0.53.1/json",
    "datasource_id": "pypi_sdist_pkginfo",
    "purl": "pkg:pypi/prompt-toolkit@0.53.1"
  }
]