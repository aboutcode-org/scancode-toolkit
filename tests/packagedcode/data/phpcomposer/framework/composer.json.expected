[
  {
    "type": "composer",
    "namespace": "narrowspark",
    "name": "framework",
    "version": null,
    "qualifiers": {},
    "subpath": null,
    "primary_language": "PHP",
    "description": null,
    "release_date": null,
    "parties": [
      {
        "type": "person",
        "role": "Developer",
        "name": "Daniel Bannert",
        "email": "d.bannert@anolilab.de",
        "url": "http://www.anolilab.de"
      },
      {
        "type": "person",
        "role": "vendor",
        "name": "narrowspark",
        "email": null,
        "url": null
      }
    ],
    "keywords": [],
    "homepage_url": "https://github.com/narrowspark/framework",
    "download_url": null,
    "size": null,
    "sha1": null,
    "md5": null,
    "sha256": null,
    "sha512": null,
    "bug_tracking_url": "https://github.com/narrowspark/framework/issues",
    "code_view_url": "https://github.com/narrowspark/framework",
    "vcs_url": null,
    "copyright": null,
    "license_expression": "mit",
    "declared_license": "MIT",
    "notice_text": null,
    "root_path": null,
    "dependencies": [
      {
        "purl": "pkg:composer/php",
        "package_version": null,
        "requirement": "7.0.0 - 7.0.5 || ^7.0.7",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-openssl",
        "package_version": null,
        "requirement": "*",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/chain-adapter",
        "package_version": null,
        "requirement": "^0.4",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/namespaced-cache",
        "package_version": null,
        "requirement": "^0.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cakephp/chronos",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/classpreloader/classpreloader",
        "package_version": null,
        "requirement": "^3.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/container-interop/container-interop",
        "package_version": null,
        "requirement": "^1.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/container-interop/service-provider",
        "package_version": null,
        "requirement": "^0.3",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/danielstjules/stringy",
        "package_version": null,
        "requirement": "^2.3",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/defuse/php-encryption",
        "package_version": null,
        "requirement": "^2.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/doctrine/dbal",
        "package_version": null,
        "requirement": "^2.5",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/doctrine/migrations",
        "package_version": null,
        "requirement": "^1.4",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/egulias/email-validator",
        "package_version": null,
        "requirement": "^2.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/filp/whoops",
        "package_version": null,
        "requirement": "^2.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/http-interop/http-factory",
        "package_version": null,
        "requirement": "^0.2",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/http-interop/http-middleware",
        "package_version": null,
        "requirement": "^0.3",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem",
        "package_version": null,
        "requirement": "^1.0.27",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/monolog/monolog",
        "package_version": null,
        "requirement": "^1.17",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/narrowspark/arr",
        "package_version": null,
        "requirement": "^2.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/narrowspark/collection",
        "package_version": null,
        "requirement": "^0.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/narrowspark/http-status",
        "package_version": null,
        "requirement": "^2.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/mtdowling/cron-expression",
        "package_version": null,
        "requirement": "^1.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/opis/closure",
        "package_version": null,
        "requirement": "^2.2.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ocramius/proxy-manager",
        "package_version": null,
        "requirement": "^2",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/php-di/invoker",
        "package_version": null,
        "requirement": "^1.3",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/paragonie/password_lock",
        "package_version": null,
        "requirement": "^3.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/http-message",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psy/psysh",
        "package_version": null,
        "requirement": "^0.6",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ramsey/uuid",
        "package_version": null,
        "requirement": "^3.4",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/respect/validation",
        "package_version": null,
        "requirement": "^1.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/schnittstabil/csrf-tokenservice",
        "package_version": null,
        "requirement": "^2.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/stecman/symfony-console-completion",
        "package_version": null,
        "requirement": "^0.6",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/console",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/debug",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/finder",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/filesystem",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/polyfill-intl-icu",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/polyfill-mbstring",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/var-dumper",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/swiftmailer/swiftmailer",
        "package_version": null,
        "requirement": "^5.4",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/vlucas/phpdotenv",
        "package_version": null,
        "requirement": "^2.3",
        "scope": "require",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/aws/aws-sdk-php",
        "package_version": null,
        "requirement": "^3.18",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/array-adapter",
        "package_version": null,
        "requirement": "^0.4",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/filesystem-adapter",
        "package_version": null,
        "requirement": "^0.3",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/session-handler",
        "package_version": null,
        "requirement": "^0.2",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/void-adapter",
        "package_version": null,
        "requirement": "^0.3",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/guzzlehttp/guzzle",
        "package_version": null,
        "requirement": "^6.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-aws-s3-v3",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-cached-adapter",
        "package_version": null,
        "requirement": "^1.0.3",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-dropbox",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-gridfs",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-rackspace",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-sftp",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-webdav",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-vfs",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-ziparchive",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/plates",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/mikey179/vfsStream",
        "package_version": null,
        "requirement": "^1.6",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/mouf/picotainer",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/narrowspark/php-cs-fixer-config",
        "package_version": null,
        "requirement": "^2.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/narrowspark/testing-helper",
        "package_version": null,
        "requirement": "^2.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/mockery/mockery",
        "package_version": null,
        "requirement": "^0.9.5",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/phpunit/phpunit",
        "package_version": null,
        "requirement": "^5.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/phpbench/phpbench",
        "package_version": null,
        "requirement": "^0.12",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/predis/predis",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/php-amqplib/php-amqplib",
        "package_version": null,
        "requirement": "^2.6",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/pda/pheanstalk",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/spatie/array-to-xml",
        "package_version": null,
        "requirement": "^2.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/twig/twig",
        "package_version": null,
        "requirement": "^1.24",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/sepia/po-parser",
        "package_version": null,
        "requirement": "^4.2",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/yaml",
        "package_version": null,
        "requirement": "^3.1",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/yosymfony/toml",
        "package_version": null,
        "requirement": "^0.3",
        "scope": "require-dev",
        "is_runtime": false,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/container-interop/container-interop-implementation",
        "package_version": null,
        "requirement": "^1.1",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/cache-implementation",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/container-implementation",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/http-message",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/http-message-implementation",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/psr/log-implementation",
        "package_version": null,
        "requirement": "^1.0",
        "scope": "provide",
        "is_runtime": true,
        "is_optional": false,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/cache",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/conifg",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/console",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/container",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/contracts",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/cookie",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/database",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/encrypter",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/events",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/exception",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/filessystem",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/hashing",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/http",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/http-factory",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/log",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/mail",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/parsers",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/pipeline",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/routing",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/session",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/statical-proxy",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/support",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/translator",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/validation",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/viserio/view",
        "package_version": null,
        "requirement": "self.version",
        "scope": "replace",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/alcaeus/mongo-php-adapter",
        "package_version": null,
        "requirement": "Required to use the ext-mongo interface on ext-mongodb interface (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/aws/aws-sdk-php",
        "package_version": null,
        "requirement": "Required to use the SQS queue driver and SES mail driver (^3.18).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/apc-adapter",
        "package_version": null,
        "requirement": "Required to use the Apc cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/apcu-adapter",
        "package_version": null,
        "requirement": "Required to use the Apcu cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/array-adapter",
        "package_version": null,
        "requirement": "Required to use the Array cache (^0.2)",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/filesystem-adapter",
        "package_version": null,
        "requirement": "Required to use the Filesystem cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/memcache-adapter",
        "package_version": null,
        "requirement": "Required to use the Memcache cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/memcached-adapter",
        "package_version": null,
        "requirement": "Required to use the Memcached cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/mongodb-adapter",
        "package_version": null,
        "requirement": "Required to use the Mongodb cache (^0.2).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/predis-adapter",
        "package_version": null,
        "requirement": "Required to use the Predis cache (^0.4).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/session-handler",
        "package_version": null,
        "requirement": "Required to use the Session cache (^0.1).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/cache/void-adapter",
        "package_version": null,
        "requirement": "Required to use the Void cache (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo",
        "package_version": null,
        "requirement": "Required to use PDO adapters",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo_dblib",
        "package_version": null,
        "requirement": "Required to use MSSQL databases on Liunx/UNIX platform",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo-firebird",
        "package_version": null,
        "requirement": "Required to use Firebird databases",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo-mysql",
        "package_version": null,
        "requirement": "Required to use MySQL or MariaDB databases",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo-pqsql",
        "package_version": null,
        "requirement": "Required to use PostgreSQL databases",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo-sqlite",
        "package_version": null,
        "requirement": "Required to use SQLite databases",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/ext-pdo_sqlsrv",
        "package_version": null,
        "requirement": "Required to use MSSQL databases on Windows platform",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/guzzlehttp/guzzle",
        "package_version": null,
        "requirement": "Required to use the Mailgun and Mandrill mail drivers and the ping methods on schedules (^6.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-aws-s3-v3",
        "package_version": null,
        "requirement": "Required to use the Flysystem S3 adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-cached-adapter",
        "package_version": null,
        "requirement": "Required to use the Flysystem Caching adapter (^1.0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-dropbox",
        "package_version": null,
        "requirement": "Required to use the Flysystem Dropbox adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-gridfs",
        "package_version": null,
        "requirement": "Required to use the Flysystem GridFS adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-rackspace",
        "package_version": null,
        "requirement": "Required to use the Flysystem Rackspace adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-replicate-adapter",
        "package_version": null,
        "requirement": "Required to use the Flysystem Replicate adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-sftp",
        "package_version": null,
        "requirement": "Required to use the Flysystem SFTP adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-webdav",
        "package_version": null,
        "requirement": "Required to use the Flysystem WebDav adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-vfs",
        "package_version": null,
        "requirement": "Required to use the Flysystem VFS adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/flysystem-ziparchive",
        "package_version": null,
        "requirement": "Required to use the Flysystem ZipArchive adapter (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/league/plates",
        "package_version": null,
        "requirement": "Required to use the League Plates view adapter (^3.1).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/pda/pheanstalk",
        "package_version": null,
        "requirement": "Required to use the Beanstalk queue driver (^3.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/predis/predis",
        "package_version": null,
        "requirement": "Required to use the Redis cache and Queue drivers (^1.0).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/twig/twig",
        "package_version": null,
        "requirement": "Required to use the Twig view adapter (^1.24).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/spatie/array-to-xml",
        "package_version": null,
        "requirement": "Required to use the XML dump (^2.1.1).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/yosymfony/toml",
        "package_version": null,
        "requirement": "Required to use the TOML parser (^0.3).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      },
      {
        "purl": "pkg:composer/symfony/yaml",
        "package_version": null,
        "requirement": "Required to use the Yaml parser (^3.1).",
        "scope": "suggest",
        "is_runtime": true,
        "is_optional": true,
        "is_resolved": false
      }
    ],
    "contains_source_code": null,
    "source_packages": [],
    "purl": "pkg:composer/narrowspark/framework",
    "repository_homepage_url": "https://packagist.org/packages/narrowspark/framework",
    "repository_download_url": null,
    "api_data_url": "https://packagist.org/p/packages/narrowspark/framework.json"
  }
]