#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.14).
# To extract the files from this archive, save it to some FILE, remove
# everything before the '#!/bin/sh' line above, then type 'sh FILE'.
#
lock_dir=_sh21014
# Made on 2017-05-29 10:55 CEST by <pombreda@COMPUTER>.
# Source directory was '/home/pombreda/w421/scancode-toolkit-3'.
#
# Existing files will *not* be overwritten, unless '-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#  10240 -rw-rw-r-- tst.tar
#
MD5SUM=${MD5SUM-md5sum}
f=`${MD5SUM} --version | egrep '^md5sum .*(core|text)utils'`
test -n "${f}" && md5check=true || md5check=false
${md5check} || \
  echo 'Note: not verifying md5sums.  Consider installing GNU coreutils.'
if test "X$1" = "X-c"
then keep_file=''
else keep_file=true
fi
echo=echo
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=
locale_dir=
set_echo=false

for dir in $PATH
do
  if test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    case `$dir/gettext --version 2>&1 | sed 1q` in
      *GNU*) gettext_dir=$dir
      set_echo=true
      break ;;
    esac
  fi
done

if ${set_echo}
then
  set_echo=false
  for dir in $PATH
  do
    if test -f $dir/shar \
       && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
    then
      locale_dir=`$dir/shar --print-text-domain-dir`
      set_echo=true
      break
    fi
  done

  if ${set_echo}
  then
    TEXTDOMAINDIR=$locale_dir
    export TEXTDOMAINDIR
    TEXTDOMAIN=sharutils
    export TEXTDOMAIN
    echo="$gettext_dir/gettext -s"
  fi
fi
IFS="$save_IFS"
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null
then if (echo -n test; echo 1,2,3) | grep n >/dev/null
     then shar_n= shar_c='
'
     else shar_n=-n shar_c= ; fi
else shar_n= shar_c='\c' ; fi
f=shar-touch.$$
st1=200112312359.59
st2=123123592001.59
st2tr=123123592001.5 # old SysV 14-char limit
st3=1231235901

if   touch -am -t ${st1} ${f} >/dev/null 2>&1 && \
     test ! -f ${st1} && test -f ${f}; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'

elif touch -am ${st2} ${f} >/dev/null 2>&1 && \
     test ! -f ${st2} && test ! -f ${st2tr} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'

elif touch -am ${st3} ${f} >/dev/null 2>&1 && \
     test ! -f ${st3} && test -f ${f}; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'

else
  shar_touch=:
  echo
  ${echo} 'WARNING: not restoring timestamps.  Consider getting and
installing GNU '\''touch'\'', distributed in GNU coreutils...'
  echo
fi
rm -f ${st1} ${st2} ${st2tr} ${st3} ${f}
#
if test ! -d ${lock_dir} ; then :
else ${echo} "lock directory ${lock_dir} exists"
     exit 1
fi
if mkdir ${lock_dir}
then ${echo} "x - created lock directory ${lock_dir}."
else ${echo} "x - failed to create lock directory ${lock_dir}."
     exit 1
fi
# ============= tst.tar ==============
if test -n "${keep_file}" && test -f 'tst.tar'
then
${echo} "x - SKIPPING tst.tar (file already exists)"

else
${echo} "x - extracting tst.tar gzipped"
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 _sh21014/gzi
M'XL("-OA*UD"`W1S="YT87(`[=4[#L(P$$51UZS".\CX%TOL)B$4%`B4.!*P
M>IP""47BTS@HXI[&A=T]SYLTI$H5)EF,83I-#/)\/BCCC+&Q%F>M$F/%.:6#
M6L`XI*;76IU/Q[;?=\VK=Y_N5RKE_)MV5SS_NO9O\O?S_'W^+EK(O[CKY;91
M^%O3_`]CVQWZJNC\?]W_DM\9YZRG_Q?./U?!K_H_S/+W$CW]OX2\^[<L````
3``````````!8OSL%+,^#`"@``*RG
`
end
SHAR_EOF
${echo} gunzipping file tst.tar &&

gzip -dc ${lock_dir}/gzi > 'tst.tar' && \
  (set 20 17 05 29 10 54 51 'tst.tar'
   eval "${shar_touch}") && \
  chmod 0664 'tst.tar'
if test $? -ne 0
then ${echo} "restore of tst.tar failed"
fi
  if ${md5check}
  then (
       ${MD5SUM} -c >/dev/null 2>&1 || ${echo} 'tst.tar': 'MD5 check failed'
       ) << \SHAR_EOF
d63780863031afa6876731a6afbed43e  tst.tar
SHAR_EOF

else
test `LC_ALL=C wc -c < 'tst.tar'` -ne 10240 && \
  ${echo} "restoration warning:  size of 'tst.tar' is not 10240"
  fi
fi
if rm -fr ${lock_dir}
then ${echo} "x - removed lock directory ${lock_dir}."
else ${echo} "x - failed to remove lock directory ${lock_dir}."
     exit 1
fi
exit 0
