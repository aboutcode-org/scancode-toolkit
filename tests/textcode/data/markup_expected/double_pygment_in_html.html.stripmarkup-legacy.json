[
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"",
  "\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
  "",
  "<html xmlns=\"http://www.w3.org/1999/xhtml\">",
  "<head>",
  "",
  "",
  "Pygments &mdash; Pygments",
  "",
  "",
  "",
  "",
  "",
  "var DOCUMENTATION_OPTIONS = {",
  "URL_ROOT:    '/',",
  "VERSION:     '',",
  "COLLAPSE_INDEX: false,",
  "FILE_SUFFIX: '',",
  "HAS_SOURCE:  false",
  "};",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "<link href='http://fonts.googleapis.com/css?family=PT+Sans:300,400,700'",
  "rel='stylesheet' type='text/css'>",
  "",
  "// intelligent scrolling of the sidebar content",
  "$(window).scroll(function() {",
  "var sb = $('.sphinxsidebarwrapper');",
  "var win = $(window);",
  "var sbh = sb.height();",
  "var offset = $('.sphinxsidebar').position()['top'];",
  "var wintop = win.scrollTop();",
  "var winbot = wintop + win.innerHeight();",
  "var curtop = sb.position()['top'];",
  "var curbot = curtop + sbh;",
  "// does sidebar fit in window?",
  "if (sbh < win.innerHeight()) {",
  "// yes: easy case -- always keep at the top",
  "sb.css('top', $u.min([$u.max([0, wintop - offset - 10]),",
  "$(document).height() - sbh - 200]));",
  "} else {",
  "// no: only scroll if top/bottom edge of sidebar is at",
  "// top/bottom edge of window",
  "if (curtop > wintop && curbot > winbot) {",
  "sb.css('top', $u.max([wintop - offset - 10, 0]));",
  "} else if (curtop < wintop && curbot < winbot) {",
  "sb.css('top', $u.min([winbot - sbh - offset - 20,",
  "$(document).height() - sbh - 200]));",
  "}",
  "}",
  "});",
  "",
  "</head>",
  "",
  "",
  "",
  "",
  "Home</a>",
  "Demo</a>",
  "Languages</a>",
  "FAQ</a>",
  "Get it</a>",
  "Docs</a>",
  "",
  "",
  "",
  "",
  "</a>",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "<h1 class=\"heading\">Demo entry 1487240</h1>",
  "",
  "<p> html generated by pygment </p>",
  "",
  "",
  "Use this style:  &nbsp;",
  "<select id=\"style\" name=\"style\" onchange=\"document.forms.filter_form.submit()\">",
  "",
  "manni",
  "",
  "igor",
  "",
  "xcode",
  "",
  "vim",
  "",
  "autumn",
  "",
  "vs",
  "",
  "rrt",
  "",
  "native",
  "",
  "perldoc",
  "",
  "borland",
  "",
  "tango",
  "",
  "emacs",
  "",
  "friendly",
  "",
  "monokai",
  "",
  "paraiso-dark",
  "",
  "colorful",
  "",
  "murphy",
  "",
  "bw",
  "",
  "pastie",
  "",
  "paraiso-light",
  "",
  "trac",
  "",
  "default",
  "",
  "fruity",
  "",
  "&nbsp;",
  "",
  "</p>",
  "",
  "",
  "<p>Submitted by  anonymous",
  "on Apr 20, 2015 at 11:15",
  "Language: HTML. Code size: 11.1 kB.",
  "</p>",
  "",
  "",
  "<div style=\"border: 1px solid #ddd; background-color: #fff0f0; padding: 10px;",
  "margin-top: 15px\">",
  "<b>Important:</b> This entry is not yet stored in the database.</p>",
  "",
  "",
  "",
  "&nbsp;or&nbsp;",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;",
  "&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;",
  "",
  "&lt;html   xmlns=  &quot;http://www.w3.org/1999/xhtml&quot;  &gt;",
  "&lt;head&gt;",
  "&lt;meta   http-equiv=  &quot;Content-Type&quot;   content=  &quot;text/html; charset=&quot;   /&gt;",
  "",
  "&lt;title&gt; Pygments  &amp;mdash;  Pygments &lt;/title&gt;",
  "",
  "&lt;link   rel=  &quot;stylesheet&quot;   href=  &quot;/_static/pygments14.css&quot;   type=  &quot;text/css&quot;   /&gt;",
  "&lt;link   rel=  &quot;stylesheet&quot;   href=  &quot;/_static/pygments.css&quot;   type=  &quot;text/css&quot;   /&gt;",
  "",
  "&lt;script   type=  &quot;text/javascript&quot;  &gt;",
  "var   DOCUMENTATION_OPTIONS   =   {",
  "URL_ROOT  :      &#39;/&#39;  ,",
  "VERSION  :       &#39;&#39;  ,",
  "COLLAPSE_INDEX  :   false  ,",
  "FILE_SUFFIX  :   &#39;&#39;  ,",
  "HAS_SOURCE  :    false",
  "};",
  "&lt;/script&gt;",
  "&lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/jquery.js&quot;  &gt;&lt;/script&gt;",
  "&lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/underscore.js&quot;  &gt;&lt;/script&gt;",
  "&lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/doctools.js&quot;  &gt;&lt;/script&gt;",
  "",
  "",
  "&lt;link   rel=  &quot;shortcut icon&quot;   href=  &quot;/_static/favicon.ico&quot;  /&gt;",
  "&lt;link   rel=  &quot;top&quot;   title=  &quot;Pygments documentation&quot;   href=  &quot;/&quot;   /&gt;",
  "&lt;link   href=  &#39;http://fonts.googleapis.com/css?family=PT+Sans:300,400,700&#39;",
  "rel=  &#39;stylesheet&#39;   type=  &#39;text/css&#39;  &gt;",
  "&lt;script   type=  &quot;text/javascript&quot;  &gt;",
  "// intelligent scrolling of the sidebar content",
  "$  (  window  ).  scroll  (  function  ()   {",
  "var   sb   =   $  (  &#39;.sphinxsidebarwrapper&#39;  );",
  "var   win   =   $  (  window  );",
  "var   sbh   =   sb  .  height  ();",
  "var   offset   =   $  (  &#39;.sphinxsidebar&#39;  ).  position  ()[  &#39;top&#39;  ];",
  "var   wintop   =   win  .  scrollTop  ();",
  "var   winbot   =   wintop   +   win  .  innerHeight  ();",
  "var   curtop   =   sb  .  position  ()[  &#39;top&#39;  ];",
  "var   curbot   =   curtop   +   sbh  ;",
  "// does sidebar fit in window?",
  "if   (  sbh   &lt;   win  .  innerHeight  ())   {",
  "// yes: easy case -- always keep at the top",
  "sb  .  css  (  &#39;top&#39;  ,   $u  .  min  ([  $u  .  max  ([  0  ,   wintop   -   offset   -   10  ]),",
  "$  (  document  ).  height  ()   -   sbh   -   200  ]));",
  "}   else   {",
  "// no: only scroll if top/bottom edge of sidebar is at",
  "// top/bottom edge of window",
  "if   (  curtop   &gt;   wintop   &amp;&amp;   curbot   &gt;   winbot  )   {",
  "sb  .  css  (  &#39;top&#39;  ,   $u  .  max  ([  wintop   -   offset   -   10  ,   0  ]));",
  "}   else   if   (  curtop   &lt;   wintop   &amp;&amp;   curbot   &lt;   winbot  )   {",
  "sb  .  css  (  &#39;top&#39;  ,   $u  .  min  ([  winbot   -   sbh   -   offset   -   20  ,",
  "$  (  document  ).  height  ()   -   sbh   -   200  ]));",
  "}",
  "}",
  "});",
  "&lt;/script&gt;",
  "&lt;/head&gt;",
  "&lt;body   role=  &quot;document&quot;  &gt;",
  "&lt;div   class=  &quot;outerwrapper&quot;  &gt;",
  "&lt;div   class=  &quot;pageheader&quot;  &gt;",
  "&lt;ul&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/&quot;  &gt; Home &lt;/a&gt;&lt;/li&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/demo/&quot;  &gt; Demo &lt;/a&gt;&lt;/li&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/languages/&quot;  &gt; Languages &lt;/a&gt;&lt;/li&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/faq/&quot;  &gt; FAQ &lt;/a&gt;&lt;/li&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/download/&quot;  &gt; Get it &lt;/a&gt;&lt;/li&gt;",
  "&lt;li&gt;&lt;a   href=  &quot;/docs/&quot;  &gt; Docs &lt;/a&gt;&lt;/li&gt;",
  "&lt;/ul&gt;",
  "&lt;div&gt;",
  "&lt;a   href=  &quot;/&quot;  &gt;",
  "&lt;img   src=  &quot;/_static/logo.png&quot;   alt=  &quot;Pygments logo&quot;   /&gt;",
  "&lt;/a&gt;",
  "&lt;/div&gt;",
  "&lt;/div&gt;",
  "",
  "",
  "&lt;div   class=  &quot;document&quot;  &gt;",
  "&lt;div   class=  &quot;documentwrapper&quot;  &gt;",
  "&lt;div   class=  &quot;fullbodywrapper&quot;  &gt;",
  "&lt;div   class=  &quot;body&quot;   role=  &quot;main&quot;  &gt;",
  "",
  "&lt;h1   class=  &quot;heading&quot;  &gt; Demo entry 1487118 &lt;/h1&gt;",
  "",
  "&lt;p&gt;&lt;strong&gt; namespace init in CS &lt;/strong&gt;&lt;/p&gt;",
  "",
  "&lt;form   action=  &quot;/demo/1487118/&quot;   method=  &quot;get&quot;   name=  &quot;filter_form&quot;   id=  &quot;filter_form&quot;  &gt;",
  "&lt;p   style=  &quot;margin-top: 0&quot;  &gt;&lt;label   for=  &quot;style&quot;  &gt; Use this style: &lt;/label&gt;   &amp;nbsp;",
  "&lt;select   id=  &quot;style&quot;   name=  &quot;style&quot;   onchange=  &quot;document.forms.filter_form.submit()&quot;  &gt;",
  "",
  "&lt;option   value=  &quot;manni&quot;   &gt; manni &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;igor&quot;   &gt; igor &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;xcode&quot;   &gt; xcode &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;vim&quot;   &gt; vim &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;autumn&quot;   &gt; autumn &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;vs&quot;   &gt; vs &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;rrt&quot;   &gt; rrt &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;native&quot;   &gt; native &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;perldoc&quot;   &gt; perldoc &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;borland&quot;   &gt; borland &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;tango&quot;   &gt; tango &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;emacs&quot;   &gt; emacs &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;friendly&quot;   selected=  &quot;selected&quot;  &gt; friendly &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;monokai&quot;   &gt; monokai &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;paraiso-dark&quot;   &gt; paraiso-dark &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;colorful&quot;   &gt; colorful &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;murphy&quot;   &gt; murphy &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;bw&quot;   &gt; bw &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;pastie&quot;   &gt; pastie &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;paraiso-light&quot;   &gt; paraiso-light &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;trac&quot;   &gt; trac &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;default&quot;   &gt; default &lt;/option&gt;",
  "",
  "&lt;option   value=  &quot;fruity&quot;   &gt; fruity &lt;/option&gt;",
  "",
  "&lt;/select&gt;   &amp;nbsp;",
  "&lt;input   type=  &quot;submit&quot;   value=  &quot;Go&quot;  &gt;",
  "&lt;/p&gt;",
  "&lt;/form&gt;",
  "",
  "&lt;p&gt; Submitted by  &lt;strong&gt; Jesus Franco &lt;/strong&gt;",
  "on Apr 17, 2015 at 17:46  &lt;br&gt;",
  "Language: CoffeeScript. Code size: 1.4 kB.",
  "&lt;/p&gt;",
  "",
  "",
  "",
  "&lt;div   class=  &quot;hlcode&quot;  &gt;",
  "&lt;div   class=  &quot;syntax&quot;  &gt;&lt;pre&gt;&lt;span   class=  &quot;nv&quot;  &gt; extend =  &lt;/span&gt;&lt;span   class=  &quot;nf&quot;  &gt; (inject, template) - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; template &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ] &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; = &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; inject &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ]) &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; for &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; own &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; of &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; inject &lt;/span&gt;",
  "&lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt;",
  "",
  "&lt;span   class=  &quot;nv&quot;  &gt; init_namespace =  &lt;/span&gt;&lt;span   class=  &quot;nf&quot;  &gt; (nameString, obj, container) - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; ?= &lt;/span&gt;   &lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;",
  "&lt;span   class=  &quot;nv&quot;  &gt; names =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nameString &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; split &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;s&quot;  &gt;  &amp;#39; . &amp;#39;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt;",
  "&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; name &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ] &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; or= &lt;/span&gt;   &lt;span   class=  &quot;p&quot;  &gt; {} &lt;/span&gt;   &lt;span   class=  &quot;p&quot;  &gt; ; &lt;/span&gt;",
  "&lt;span   class=  &quot;nv&quot;  &gt; container =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; name &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ]) &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; while &lt;/span&gt;   &lt;span   class=  &quot;nv&quot;  &gt; name =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; names &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; shift &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; extend &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; obj &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt;",
  "",
  "&lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; Namespace DRY initializer &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A simple name init &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; a simple name should be available in global object &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple &amp;quot;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "",
  "&lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A two levels nested name path &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; beforeEach &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nv&quot;  &gt; simple =  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple.nested &amp;quot;  &lt;/span&gt;",
  "",
  "&lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; makes available its top name in container &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; makes available its child name in container &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nested &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "",
  "&lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A custom passed object &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; set its properties to ns &amp;#39;  deepest child &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt;",
  "&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nv&quot;  &gt; simple =  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple.nested.ns &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;",
  "&lt;span   class=  &quot;nv&quot;  &gt; custom:  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; true &lt;/span&gt;",
  "&lt;span   class=  &quot;nv&quot;  &gt; queryable:  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; false &lt;/span&gt;",
  "&lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;o&quot;  &gt; = &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nested &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; custom &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeTruthy &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "&lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; queryable &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeFalsy &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt;",
  "&lt;/pre&gt;&lt;/div&gt;",
  "",
  "&lt;/div&gt;",
  "",
  "&lt;p&gt; This snippet took 0.00 seconds to highlight. &lt;/p&gt;",
  "",
  "&lt;p&gt; Back to the  &lt;a   href=  &quot;/demo/&quot;  &gt; Entry List &lt;/a&gt;  or  &lt;a   href=  &quot;/&quot;  &gt; Home &lt;/a&gt; . &lt;/p&gt;",
  "",
  "&lt;p   style=  &quot;font-size: xx-small&quot;  &gt;&lt;a   href=  &quot;/demo/1487118/delete/&quot;  &gt; Delete this entry (admin only) &lt;/a&gt; . &lt;/p&gt;",
  "",
  "&lt;/div&gt;",
  "&lt;/div&gt;",
  "&lt;/div&gt;",
  "",
  "&lt;div   class=  &quot;clearer&quot;  &gt;&lt;/div&gt;",
  "&lt;/div&gt;",
  "&lt;div   class=  &quot;footer&quot;   role=  &quot;contentinfo&quot;  &gt;",
  "&amp;copy;  Copyright 2014, Georg Brandl and Pygments contributors.",
  "Created using  &lt;a   href=  &quot;http://sphinx-doc.org/&quot;  &gt; Sphinx &lt;/a&gt;  .  &lt;br/&gt;",
  "Pygments logo created by  &lt;a   href=  &quot;http://dribbble.com/joelunger&quot;  &gt; Joel Unger &lt;/a&gt; .",
  "Backgrounds from  &lt;a   href=  &quot;http://subtlepatterns.com&quot;  &gt; subtlepatterns.com &lt;/a&gt; .",
  "&lt;/div&gt;",
  "&lt;/div&gt;",
  "&lt;/body&gt;",
  "&lt;/html&gt;",
  "",
  "",
  "",
  "",
  "<p>This snippet took 0.01 seconds to highlight.</p>",
  "",
  "<p>Back to the  Entry List</a> or  Home</a>.</p>",
  "",
  "Delete this entry (admin only)</a>.</p>",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "&copy; Copyright 2014, Georg Brandl and Pygments contributors.",
  "Created using  Sphinx</a> .",
  "Pygments logo created by  Joel Unger</a>.",
  "Backgrounds from  subtlepatterns.com</a>.",
  "",
  "",
  "",
  "</html>"
]